package com.manuanand.courses;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller	// This means that this class is a Controller
@RequestMapping(path="/course") // This means URL's start with /course (after Application path)
public class CourseController {
	@Autowired // This means to get the bean called courseRepository
			   // Which is auto-generated by Spring, we will use it to handle the data
	private CourseRepository courseRepository;
	
	///
	// Course Repository
	///
	@PostMapping(path="/add") // Map ONLY POST Requests
	public @ResponseBody Course addCourse (
			@RequestParam String name, @RequestParam String description,
			@RequestParam String category, @RequestParam String subCategory,
			@RequestParam Double priceInUSD) { 

		Course newCourse = new Course();
		newCourse.setName(name);
		newCourse.setDescription(name);
		newCourse.setCategory(category);
		newCourse.setSubCategory(subCategory);
		newCourse.setPriceInUSD(priceInUSD);
		
		courseRepository.save(newCourse);
		
		return newCourse;
	}
	
	@GetMapping(path="/")
	public @ResponseBody Iterable<Course> getAllCourses() {
		
		// This returns a JSON or XML with the users
		return courseRepository.findAll();
	}

	@GetMapping(path="/{id}")
	public @ResponseBody Course getSpecificCourse(@PathVariable String id) {
		
		Integer courseId = null;
		try {
			courseId = Integer.parseInt(id);
		} catch (NumberFormatException ex) {
			return null;
		}

		Optional<Course> course = courseRepository.findById(courseId);
		if (!course.isEmpty()) {
			return course.get();
		} 

		return null;
	}
}